import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from sql.models import User, Comment, Levels

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="5899970158:AAEB_hBtdbQs4Izpv3foYmrIkARntrJZ6ug")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot)


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    await message.answer("–ë–ª–∏–Ω –≤–∞—É –Ω—É –≤—Å–µ")


@dp.message_handler(commands=['reg'])
async def reg_user(message: types.Message):
    if message.chat.type == 'private':
        nickname = message.from_user.username
        id = message.from_user.id
        user = User()
        if user.if_exists(id):
            await message.answer("–¢—ã —Ö—É?–π")
        else:
            user.add_user(id=id, nickname=nickname)
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ç–∏—Ü—ã!")
            name = message.text
            user.edit_bird_name(id, name)
            await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∞–ª–∏—Å—å!")

    else:
        return

@dp.message_handler(content_types=['text'], commands=['profile'])
async def get_level_info(message: types.Message):
    if message.chat.type == 'private':
        id = message.from_user.id
        user = User().get_profile_data(id)
        l = Levels()
        level = User().get_profile_data(id).level
        bird = l.get_bird_data(level)
        msg = f"–í—ã - {bird.bird_name}üê§ \n–í–∞—à —É—Ä–æ–≤–µ–Ω—å - {level}\n{bird.bird_description}\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å - {user.level_progress}/100"
        await message.answer(msg)
    else:
        return

@dp.message_handler(commands=['edit'])

@dp.message_handler(commands=['–Ω–∞—Ö—É–π_—Å—Ö–æ–¥–∏'])
async def cmd_start(message: types.Message):
    await message.answer("–°—Ö–æ–¥–∏–ª")


@dp.message_handler(commands=['–±–ª—è—Ç—å'])
async def cmd_start(message: types.Message):
    await message.answer("–°–æ–≥–ª–∞—Å–µ–Ω")


@dp.message_handler(commands=['–∫–∞–∫_–¥–µ–ª–∞'])
async def cmd_start(message: types.Message):
    await message.answer("—è —Ö–æ—á—É –ø—Å–∂")


@dp.message_handler()
async def cmd_start(message: types.Message):
    await message.answer("–≤–æ–ø—Ä–æ—Å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∑–∞–¥–∞–π")
# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
